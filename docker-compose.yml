version: "3.3"

services:
  nginx:
    build:
      context: docker/nginx
      dockerfile: Dockerfile
      args:
        - HOST=${HOST}
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - .env

  app:
    depends_on:
      - db
      - redis
    env_file:
      - .env
    ports:
      - "3000:3000"
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    volumes:
      - .:/app
      - bundle_data:/bundle
    command: sh /scripts/command.sh
    stdin_open: true
    tty: true

  sidekiq:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    volumes:
      - .:/app
    environment:
      RAILS_ENV: ${RAILS_ENV}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_URL: redis://${REDIS_HOST}:${REDIS_PORT}/0
    command: bash -c 'bundle install && bundle exec sidekiq -C config/sidekiq.yml'
    depends_on:
      - redis

  redis:
    image: redis:4.0-alpine
    command: redis-server
    volumes:
      - ./redis-data:/var/lib/redis/data
    ports:
      - ${REDIS_PORT}
    logging:
      driver: none

  db:
    image: mysql:5.7
    restart: on-failure
    env_file:
      - .env
    ports:
        - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DATABASE_NAME}
    volumes:
      - mysql_data:/var/lib/mysql

volumes:
  mysql_data:
  bundle_data: