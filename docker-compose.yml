version: "3.3"

services:
  nginx:
    build:
      context: docker/nginx
      dockerfile: Dockerfile
      args:
        - HOST=${HOST}
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - .env

  app:
    depends_on:
      - db
      - redis
      - elasticsearch
    ports:
      - "3000:3000"
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    volumes:
      - .:/app
      - bundle_data:/bundle
    command: sh /scripts/command.sh
    stdin_open: true
    tty: true
    container_name: app
    environment:
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}

  sidekiq:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    volumes:
      - .:/app
    environment:
      RAILS_ENV: ${RAILS_ENV}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_URL: redis://${REDIS_HOST}:${REDIS_PORT}/0
    command: bash -c 'bundle install && bundle exec sidekiq -C config/sidekiq.yml'
    depends_on:
      - redis
    container_name: sidekiq

  redis:
    image: redis:4.0-alpine
    command: redis-server
    volumes:
      - ./redis-data:/var/lib/redis/data
    ports:
      - "6379:6379"
    logging:
      driver: none
    container_name: redis

  db:
    image: mysql:5.7
    restart: on-failure
    env_file:
      - .env
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DATABASE_NAME}
    volumes:
      - mysql_data:/var/lib/mysql
    container_name: db

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.4.0
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_URL}
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  logstash:
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    image: docker.elastic.co/logstash/logstash:7.17.13
    ports:
      - "5228:5228/udp"
    depends_on:
      - elasticsearch
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    volumes:
      - ./logstash/pipeline/logstash.conf:/etc/logstash/conf.d/logstash.conf:ro

  # db:
  #   image: postgres
  #   environment:
  #     POSTGRES_USER: medme
  #     POSTGRES_PASSWORD: password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data

volumes:
  mysql_data:
  bundle_data:
  esdata:
